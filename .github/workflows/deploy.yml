name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      VITE_OPENROUTER_API_KEY: ${{ secrets.VITE_OPENROUTER_API_KEY }}
      VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
      VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
      VITE_MAX_MESSAGES_PER_HOUR: "60"
      VITE_ENABLE_VOICE: "true"

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          npm ci
          npm install -g typescript

      - name: Create env file
        run: |
          # Create env file
          echo "VITE_OPENROUTER_API_KEY='${{ secrets.VITE_OPENROUTER_API_KEY }}'" > .env
          echo "VITE_SUPABASE_URL='${{ secrets.VITE_SUPABASE_URL }}'" >> .env
          echo "VITE_SUPABASE_ANON_KEY='${{ secrets.VITE_SUPABASE_ANON_KEY }}'" >> .env
          echo "VITE_MAX_MESSAGES_PER_HOUR=60" >> .env
          echo "VITE_ENABLE_VOICE=true" >> .env

          # Debug: Show env file exists (without content)
          ls -la .env

      - name: Build
        run: |
          # Show environment variables (excluding secrets)
          echo "Build environment:"
          echo "NODE_ENV: $NODE_ENV"
          echo "VITE_MAX_MESSAGES_PER_HOUR: $VITE_MAX_MESSAGES_PER_HOUR"
          echo "VITE_ENABLE_VOICE: $VITE_ENABLE_VOICE"
          
          # Show npm and node versions
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          
          # Run build with detailed error output
          export NODE_ENV=production
          npm run build || {
            echo "Build failed. Checking for TypeScript errors..."
            npx tsc --noEmit
            echo "Checking for other build issues..."
            npm run build --verbose
            exit 1
          }

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
