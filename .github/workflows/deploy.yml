name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: production
    env:
      VITE_OPENROUTER_API_KEY: ${{ secrets.VITE_OPENROUTER_API_KEY }}
      VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
      VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
      VITE_MAX_MESSAGES_PER_HOUR: "60"
      VITE_ENABLE_VOICE: "true"

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Create env file
        run: |
          # Create env file
          cat > .env << EOL
          VITE_OPENROUTER_API_KEY=${VITE_OPENROUTER_API_KEY}
          VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
          VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
          VITE_MAX_MESSAGES_PER_HOUR=${VITE_MAX_MESSAGES_PER_HOUR}
          VITE_ENABLE_VOICE=${VITE_ENABLE_VOICE}
          EOL

          # Debug: Verify env vars are set (will be masked in logs)
          echo "Environment variables status:"
          echo "VITE_OPENROUTER_API_KEY: $(if [ -n "$VITE_OPENROUTER_API_KEY" ]; then echo "✓"; else echo "✗"; fi)"
          echo "VITE_SUPABASE_URL: $(if [ -n "$VITE_SUPABASE_URL" ]; then echo "✓"; else echo "✗"; fi)"
          echo "VITE_SUPABASE_ANON_KEY: $(if [ -n "$VITE_SUPABASE_ANON_KEY" ]; then echo "✓"; else echo "✗"; fi)"
          echo "VITE_MAX_MESSAGES_PER_HOUR: $(if [ -n "$VITE_MAX_MESSAGES_PER_HOUR" ]; then echo "✓"; else echo "✗"; fi)"
          echo "VITE_ENABLE_VOICE: $(if [ -n "$VITE_ENABLE_VOICE" ]; then echo "✓"; else echo "✗"; fi)"

          # Verify env file was created
          if [ ! -f .env ]; then
            echo "Error: .env file was not created"
            exit 1
          fi

          # Verify env file has content (without showing it)
          if [ ! -s .env ]; then
            echo "Error: .env file is empty"
            exit 1
          fi

      - name: Build
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
